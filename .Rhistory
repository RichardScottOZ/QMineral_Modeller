minmax.norm2(tibble(t)) - minmax.norm1(tibble(t))
t
mean(minmax.norm2(tibble(t1)) - minmax.norm1(tibble(t2)))
mean(minmax.norm2(tibble(t2)) - minmax.norm1(tibble(t2)))
mean(minmax.norm2(tibble(t2)) - minmax.norm1(tibble(t1)))
mean(minmax.norm2(tibble(t1)) - minmax.norm1(tibble(t1)))
mean(minmax.norm2(tibble(t1)) == minmax.norm1(tibble(t1)))
mean(minmax.norm2(tibble(t2)) == minmax.norm1(tibble(t2)))
mean(minmax.norm2(tibble(t3)) == minmax.norm1(tibble(t3)))
mean(minmax.norm2(tibble(t)) == minmax.norm1(tibble(t)))
t3 <- rnorm(10000)
mean(minmax.norm2(tibble(t3)) == minmax.norm1(tibble(t3)))
mean(minmax.norm2(tibble(t3)) == minmax.norm1(tibble(t3)))
#####
# Data wrangling and primary classifier of selected minerals
# Amphiboles, Feldspars, Micas, Garnets
# Guilherme Ferreira, (guilherme.ferreira@cprm.gov.br)
# April, 2020
#####
# Setting up the enviroment
#####
setwd("C:/Users/GUILHERMEFERREIRA-PC/Documents/GitHub/MinChem_Modeller")
set.seed(123)
#####
#Import Packages
#####
library(Cairo)
library(tidyverse)
library(reshape2)
library(ggthemes)
library(missRanger)
#####
# Built-in Functions
#####
col.fillrate <- function(df, sort = F) {
require(dplyr)
cols <- NULL
clist <- data.frame(`Column.Name`= character(),
`Fill.Rate` = double(),
stringsAsFactors = F)
for (c in 1:ncol(df)) {
cols[c] <- (100*sum(!is.na(df[c]))/nrow(df[c]))
}
for (c in 1:ncol(df)) {
clist[[c,1]]  <- paste0(names(df[c]))
clist[[c,2]] <- round(cols[[c]],digits = 2)
}
if (sort == F) {
print(clist)
} else {
print(clist %>% arrange(desc(Fill.Rate)))
}
}
#####
# DATA WRANGLING
#####
# Amphiboles -----
df1 <- as_tibble(read_csv('csv_files/AMPHIBOLES.csv'),n_max = 38639)
df1 <- df1[1:38639,]
amph <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
amph_labels <- amph[1:23]
selection <- c('SIO2(WT%)', 'TIO2(WT%)', 'AL2O3(WT%)', 'CR2O3(WT%)',
'FEOT(WT%)','CAO(WT%)','MGO(WT%)','MNO(WT%)','K2O(WT%)',
'NA2O(WT%)','P2O5(WT%)','H2O(WT%)','F(WT%)','CL(WT%)')
elems_names <- c('SIO2','TIO2','AL2O3','CR2O3','FEOT','CAO',
'MGO','MNO','K2O','NA2O','P2O5','H20','F','CL')
amph_elems <- amph %>%
select(all_of(selection))
names(amph_elems) <- elems_names
remove(df1)
# Garnets -----
df1 <- as_tibble(read_delim('csv_files/GARNETS.csv',delim = ';'),n_max = 42340)
df1 <- df1[1:42340,]
grt <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
amph_labels <- grt[1:23]
grt_elems <- grt %>%
select(all_of(selection))
names(grt_elems) <- elems_names
remove(df1)
# Feldspars -----
df1 <- as_tibble(read_csv('csv_files/FELDSPARS.csv'),n_max = 174107)
df1 <- df1[1:174107,]
felds <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
felds_elems <- felds %>%
select(all_of(selection))
names(felds_elems) <- elems_names
remove(df1)
# Mica -----
df1 <- as_tibble(read_csv('csv_files/MICA.csv'),n_max = 35035)
df1 <- df1[1:35035,]
mica <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
mica_elems <- felds %>%
select(all_of(selection))
names(mica_elems) <- elems_names
remove(df1)
#####
# DATA IMPUTATION
#####
#
# amph_elems <- missRanger(amph_elems, pmm.k = 3, num.trees = 100)
#
# grt_elems <- missRanger(grt_elems, pmm.k = 3, num.trees = 100)
#
# felds_elems <- missRanger(felds_elems, pmm.k = 3, num.trees = 100)
#
# mica_elems <- missRanger(felds_elems, pmm.k = 3, num.trees = 100)
remove(df1,amph)
remove(df1,felds)
remove(df1,grt)
remove(df1,mica)
col.fillrate(amph_elems)
col.fillrate(grt_elems)
col.fillrate(felds_elems)
col.fillrate(mica_elems)
sapply(mica_elems,class)
sapply(amph_elems,class)
sapply(grt_elems,class)
sapply(mica_elems,class)
amph_elems <- sapply(amph_elems, class)
amph_elems <- amph %>%
select(all_of(selection))
names(amph_elems) <- elems_names
amph <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
df1 <- as_tibble(read_csv('csv_files/AMPHIBOLES.csv'),n_max = 38639)
df1 <- df1[1:38639,]
amph <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
amph_labels <- amph[1:23]
selection <- c('SIO2(WT%)', 'TIO2(WT%)', 'AL2O3(WT%)', 'CR2O3(WT%)',
'FEOT(WT%)','CAO(WT%)','MGO(WT%)','MNO(WT%)','K2O(WT%)',
'NA2O(WT%)','P2O5(WT%)','H2O(WT%)','F(WT%)','CL(WT%)')
elems_names <- c('SIO2','TIO2','AL2O3','CR2O3','FEOT','CAO',
'MGO','MNO','K2O','NA2O','P2O5','H20','F','CL')
amph_elems <- amph %>%
select(all_of(selection))
names(amph_elems) <- elems_names
amph_elems <- sapply(amph_elems,as.numeric)
remove(df1,amph)
amph_elems <- sapply(amph_elems,as.numeric) %>%
as_tibble()
View(amph_elems)
amph_elems <- sapply(amph_elems,as.numeric)
View(amph_elems)
df1 <- as_tibble(read_csv('csv_files/AMPHIBOLES.csv'),n_max = 38639)
df1 <- df1[1:38639,]
amph <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
amph_labels <- amph[1:23]
selection <- c('SIO2(WT%)', 'TIO2(WT%)', 'AL2O3(WT%)', 'CR2O3(WT%)',
'FEOT(WT%)','CAO(WT%)','MGO(WT%)','MNO(WT%)','K2O(WT%)',
'NA2O(WT%)','P2O5(WT%)','H2O(WT%)','F(WT%)','CL(WT%)')
elems_names <- c('SIO2','TIO2','AL2O3','CR2O3','FEOT','CAO',
'MGO','MNO','K2O','NA2O','P2O5','H20','F','CL')
amph_elems <- amph %>%
select(all_of(selection))
names(amph_elems) <- elems_names
amph_elems <- sapply(amph_elems,as.numeric)
View(amph_elems)
amph_elems <- as_tibble(amph_elems)
#####
# Data wrangling and primary classifier of selected minerals
# Amphiboles, Feldspars, Micas, Garnets
# Guilherme Ferreira, (guilherme.ferreira@cprm.gov.br)
# April, 2020
#####
# Setting up the enviroment
#####
setwd("C:/Users/GUILHERMEFERREIRA-PC/Documents/GitHub/MinChem_Modeller")
set.seed(123)
#####
#Import Packages
#####
library(Cairo)
library(tidyverse)
library(reshape2)
library(ggthemes)
library(missRanger)
#####
# Built-in Functions
#####
col.fillrate <- function(df, sort = F) {
require(dplyr)
cols <- NULL
clist <- data.frame(`Column.Name`= character(),
`Fill.Rate` = double(),
stringsAsFactors = F)
for (c in 1:ncol(df)) {
cols[c] <- (100*sum(!is.na(df[c]))/nrow(df[c]))
}
for (c in 1:ncol(df)) {
clist[[c,1]]  <- paste0(names(df[c]))
clist[[c,2]] <- round(cols[[c]],digits = 2)
}
if (sort == F) {
print(clist)
} else {
print(clist %>% arrange(desc(Fill.Rate)))
}
}
#####
# DATA WRANGLING
#####
# Amphiboles -----
df1 <- as_tibble(read_csv('csv_files/AMPHIBOLES.csv'),n_max = 38639)
df1 <- df1[1:38639,]
amph <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
amph_labels <- amph[1:23]
selection <- c('SIO2(WT%)', 'TIO2(WT%)', 'AL2O3(WT%)', 'CR2O3(WT%)',
'FEOT(WT%)','CAO(WT%)','MGO(WT%)','MNO(WT%)','K2O(WT%)',
'NA2O(WT%)','P2O5(WT%)','H2O(WT%)','F(WT%)','CL(WT%)')
elems_names <- c('SIO2','TIO2','AL2O3','CR2O3','FEOT','CAO',
'MGO','MNO','K2O','NA2O','P2O5','H20','F','CL')
amph_elems <- amph %>%
select(all_of(selection))
names(amph_elems) <- elems_names
amph_elems <- sapply(amph_elems,as.numeric)
amph_elems <- as_tibble(amph_elems)
remove(df1,amph)
# Garnets -----
df1 <- as_tibble(read_delim('csv_files/GARNETS.csv',delim = ';'),n_max = 42340)
df1 <- df1[1:42340,]
grt <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
amph_labels <- grt[1:23]
grt_elems <- grt %>%
select(all_of(selection))
names(grt_elems) <- elems_names
grt_elems <- sapply(grt_elems,as.numeric)
grt_elems <- as_tibble(grt_elems)
remove(df1,grt)
# Feldspars -----
df1 <- as_tibble(read_csv('csv_files/FELDSPARS.csv'),n_max = 174107)
df1 <- df1[1:174107,]
felds <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
felds_elems <- felds %>%
select(all_of(selection))
names(felds_elems) <- elems_names
felds_elems <- sapply(felds_elems,as.numeric)
felds_elems <- as_tibble(felds_elems)
remove(df1,felds)
# Mica -----
df1 <- as_tibble(read_csv('csv_files/MICA.csv'),n_max = 35035)
df1 <- df1[1:35035,]
mica <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
mica_elems <- felds %>%
select(all_of(selection))
names(mica_elems) <- elems_names
mica_elems <- sapply(mica_elems,as.numeric)
mica_elems <- as_tibble(mica_elems)
remove(df1,mica)
#####
# DATA IMPUTATION
#####
#
# amph_elems <- missRanger(amph_elems, pmm.k = 3, num.trees = 100)
#
# grt_elems <- missRanger(grt_elems, pmm.k = 3, num.trees = 100)
#
# felds_elems <- missRanger(felds_elems, pmm.k = 3, num.trees = 100)
#
# mica_elems <- missRanger(felds_elems, pmm.k = 3, num.trees = 100)
col.fillrate(amph_elems)
col.fillrate(grt_elems)
col.fillrate(felds_elems)
col.fillrate(mica_elems)
df1 <- as_tibble(read_csv('csv_files/MICA.csv'),n_max = 35035)
df1 <- df1[1:35035,]
mica <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
mica_elems <- felds %>%
select(all_of(selection))
mica <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
mica_elems <- mica %>%
select(all_of(selection))
names(mica_elems) <- elems_names
mica_elems <- sapply(mica_elems,as.numeric)
mica_elems <- as_tibble(mica_elems)
remove(df1,mica)
amph_labels <- grt[1:23]
#####
# Data wrangling and primary classifier of selected minerals
# Amphiboles, Feldspars, Micas, Garnets
# Guilherme Ferreira, (guilherme.ferreira@cprm.gov.br)
# April, 2020
#####
# Setting up the enviroment
#####
setwd("C:/Users/GUILHERMEFERREIRA-PC/Documents/GitHub/MinChem_Modeller")
set.seed(123)
#####
#Import Packages
#####
library(Cairo)
library(tidyverse)
library(reshape2)
library(ggthemes)
library(missRanger)
#####
# Built-in Functions
#####
col.fillrate <- function(df, sort = F) {
require(dplyr)
cols <- NULL
clist <- data.frame(`Column.Name`= character(),
`Fill.Rate` = double(),
stringsAsFactors = F)
for (c in 1:ncol(df)) {
cols[c] <- (100*sum(!is.na(df[c]))/nrow(df[c]))
}
for (c in 1:ncol(df)) {
clist[[c,1]]  <- paste0(names(df[c]))
clist[[c,2]] <- round(cols[[c]],digits = 2)
}
if (sort == F) {
print(clist)
} else {
print(clist %>% arrange(desc(Fill.Rate)))
}
}
#####
# DATA WRANGLING
#####
# Amphiboles -----
df1 <- as_tibble(read_csv('csv_files/AMPHIBOLES.csv'),n_max = 38639)
df1 <- df1[1:38639,]
amph <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
amph_labels <- amph[1:23]
selection <- c('SIO2(WT%)', 'TIO2(WT%)', 'AL2O3(WT%)', 'CR2O3(WT%)',
'FEOT(WT%)','CAO(WT%)','MGO(WT%)','MNO(WT%)','K2O(WT%)',
'NA2O(WT%)','P2O5(WT%)','H2O(WT%)','F(WT%)','CL(WT%)')
elems_names <- c('SIO2','TIO2','AL2O3','CR2O3','FEOT','CAO',
'MGO','MNO','K2O','NA2O','P2O5','H20','F','CL')
amph_elems <- amph %>%
select(all_of(selection))
names(amph_elems) <- elems_names
amph_elems <- sapply(amph_elems,as.numeric)
amph_elems <- as_tibble(amph_elems)
remove(df1,amph)
# Garnets -----
df1 <- as_tibble(read_delim('csv_files/GARNETS.csv',delim = ';'),n_max = 42340)
df1 <- df1[1:42340,]
grt <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
grt_labels <- grt[1:23]
grt_elems <- grt %>%
select(all_of(selection))
names(grt_elems) <- elems_names
grt_elems <- sapply(grt_elems,as.numeric)
grt_elems <- as_tibble(grt_elems)
remove(df1,grt)
# Feldspars -----
df1 <- as_tibble(read_csv('csv_files/FELDSPARS.csv'),n_max = 174107)
df1 <- df1[1:174107,]
felds <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
felds_elems <- felds %>%
select(all_of(selection))
names(felds_elems) <- elems_names
felds_elems <- sapply(felds_elems,as.numeric)
felds_elems <- as_tibble(felds_elems)
remove(df1,felds)
# Mica -----
df1 <- as_tibble(read_csv('csv_files/MICA.csv'),n_max = 35035)
df1 <- df1[1:35035,]
mica <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
mica_labels <- mica[1:23]
mica_elems <- mica %>%
select(all_of(selection))
names(mica_elems) <- elems_names
mica_elems <- sapply(mica_elems,as.numeric)
mica_elems <- as_tibble(mica_elems)
remove(df1,mica)
#####
# DATA IMPUTATION
#####
#
# amph_elems <- missRanger(amph_elems, pmm.k = 3, num.trees = 100)
#
# grt_elems <- missRanger(grt_elems, pmm.k = 3, num.trees = 100)
#
# felds_elems <- missRanger(felds_elems, pmm.k = 3, num.trees = 100)
#
# mica_elems <- missRanger(felds_elems, pmm.k = 3, num.trees = 100)
df1 <- as_tibble(read_csv('csv_files/FELDSPARS.csv'),n_max = 174107)
df1 <- df1[1:174107,]
felds <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
felds_labels <- felds[1:23]
felds_elems <- felds %>%
select(all_of(selection))
names(felds_elems) <- elems_names
felds_elems <- sapply(felds_elems,as.numeric)
felds_elems <- as_tibble(felds_elems)
remove(df1,felds)
col.fillrate(amph_elems)
col.fillrate(grt_elems)
col.fillrate(felds_elems)
col.fillrate(mica_elems)
is.na(felds_elems$H20)
mean(is.na(felds_elems$H20))
sum(is.na(felds_elems$H20))
sum(!is.na(felds_elems$H20))
felds_elems$H20 <- replace_na(felds_elems$H20, 0)
sum(!is.na(felds_elems$H20))
sum(is.na(felds_elems$H20))
amph_elems <- missRanger(amph_elems, pmm.k = 3, num.trees = 100)
grt_elems <- missRanger(grt_elems, pmm.k = 3, num.trees = 100)
felds_elems <- missRanger(felds_elems, pmm.k = 3, num.trees = 100)
mica_elems <- missRanger(felds_elems, pmm.k = 3, num.trees = 100)
mica_elems <- missRanger(felds_elems, pmm.k = 3, num.trees = 100)
View(mica_elems)
summary(mica_elems)
summary(felds_elems)
summary(grt_elems)
summary(amph_elems)
mean(!is.na(amph_elems))
mean(!is.na(grt_elems))
mean(!is.na(felds_elems))
mean(!is.na(mica_elems))
amphiboles <- as_tibble(cbind(amph_labels,amph_elems))
View(amphiboles)
View(amphiboles)
class(amphiboles)
garnet <- as_tibble(cbind(grt_labels,grt_elems))
feldspar <- as_tibble(cbind(felds_labels,felds_elems))
mica <- as_tibble(cbind(mica_labels,mica_elems))
dim(mica_labels)
dim(mica_elems)
mica <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
df1 <- as_tibble(read_csv('csv_files/MICA.csv'),n_max = 35035)
df1 <- df1[1:35035,]
mica <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
mica_labels <- mica[1:23]
dim(mica_labels)
dim(mica_elems)
mica_elems <- mica %>%
select(all_of(selection))
names(mica_elems) <- elems_names
mica_elems <- sapply(mica_elems,as.numeric)
mica_elems <- as_tibble(mica_elems)
remove(df1,mica)
mica_elems <- missRanger(felds_elems, pmm.k = 3, num.trees = 100)
View(mica_elems)
df1 <- as_tibble(read_csv('csv_files/MICA.csv'),n_max = 35035)
df1 <- df1[1:35035,]
mica <- df1 %>%
select(1:89) %>%
filter(!is.na(`SIO2(WT%)`))
mica_labels <- mica[1:23]
mica_elems <- mica %>%
select(all_of(selection))
names(mica_elems) <- elems_names
mica_elems <- sapply(mica_elems,as.numeric)
mica_elems <- as_tibble(mica_elems)
remove(df1,mica)
mean(!is.na(mica_elems))
col.fillrate(mica_elems)
mica_elems <- missRanger(mica_elems, pmm.k = 3, num.trees = 100)
col.fillrate(mica_elems)
mica <- as_tibble(cbind(mica_labels,mica_elems))
write.csv(amphiboles, 'input/amphiboles_rf.csv')
write.csv(garnet, 'input/garnet_rf.csv')
write.csv(feldspar, 'input/feldspar_rf.csv')
write.csv(mica, 'input/mica_rf.csv')
amphiboles <- amphiboles %>%
mutate(MINERAL2 = 'amphibole')
View(amphiboles)
garnet <- garnet %>%
mutate(MINERAL2 = 'garnet')
felspar <- feldspar %>%
mutate(MINERAL2 = 'feldspar')
mica <- mica %>%
mutate(MINERAL2 = 'mica')
MINERALS <- amphiboles %>%
full_join(garnet) %>%
full_join(feldspar) %>%
full_join(mica)
MINERALS <- amphiboles %>%
full_join(garnet) #%>%
